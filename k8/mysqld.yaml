apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysqlds
spec:
  serviceName: "mysqld"
  replicas: 1
  selector:
    # Used by the Deployment to select and manage existing pods with the specified label
    matchLabels:
      app: mysqld
  template:
    metadata:
      # Used to apply labels to all pods created by the Deployment
      labels:
        app: mysqld
    spec:
      initContainers:
      - name: datanode-dependency-check
        image: hopsworks/rondb-standalone:22.10.1
        command:
        # Make sure data node has connected to MGMd
        # TODO: Parse ordinal number to apply for node-id
        - /bin/bash
        - -c
        - |
          until ./docker/rondb_standalone/healthcheck.sh mgmds-0.mgmd.default.svc.cluster.local:1186 1; do
            echo "Dependency healthcheck of ndbmtd failed. Retrying in 5 seconds..."
            sleep 5
          done
      containers:
      - name: mysqld
        image: hopsworks/rondb-standalone:22.10.1
        args:
          - mysqld
        ports:
          - containerPort: 3306
        env:
          - name: HOST_GROUP_ID
            value: "0"
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "true"
          - name: MYSQL_USER
            value: "mysql"
          - name: MYSQL_PASSWORD
            value: "Abc123?e"
          - name: MYSQL_SETUP_APP
            value: "1"
          # TODO: Parse ordinal number to apply for node-id
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        livenessProbe:
          exec:
            command:
              - 'mysqladmin'
              - 'ping'
              - '-uroot'
          failureThreshold: 6
          initialDelaySeconds: 25
          periodSeconds: 10
          timeoutSeconds: 2
        securityContext:
          capabilities:
            add:
              - SYS_NICE
        volumeMounts:
        - name: rondb-configs
          mountPath: /srv/hops/mysql-cluster
        # TODO: Figure out how to clean this up 
        # We need this otherwise the rondb-configs will make it a read-only directory
        - name: rondb-mysqld-data
          mountPath: /srv/hops/mysql-cluster/mysql
        - name: rondb-mysqld-files
          mountPath: /srv/hops/mysql-cluster/mysql-files
      # StatefulSets work with PVCs to create a dedicated persistent volume for
      # each pod replica, ensuring that a pod always re-attaches to the same data
      # even if it is rescheduled to a different node.
      volumes:
      - name: rondb-configs
        configMap:
          name: rondb-configs
      - name: rondb-mysqld-data
        persistentVolumeClaim:
          claimName: rondb-mysqld-data-claim
      - name: rondb-mysqld-files
        persistentVolumeClaim:
          claimName: rondb-mysqld-files-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysqld
spec:
  # Headless service for individual DNS records for the pods
  clusterIP: None
  # Match the spec.template.metadata.labels of the StatefulSet
  selector:
    app: mysqld
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rondb-mysqld-data-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rondb-mysqld-files-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
